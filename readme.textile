{toc}

h2. requirements

* Ruby 1.9.3
* bundler installed (eg. via gem install bundler)

h2. Setup

h3. Clone the vagrant-oddb git and install the needed gems

* @git clone git://github.com/ngiger/vagrant-oddb_org.git@
* @cd vagrant-oddb@

h3. Create and edit your configuration

The configuration with all your private data and keys is YAML file name @/path/to/clone/of/vagrant-oddb_org/hieradata/private/config.yaml@. You have to create the folder. Then you create the file and place the following definitions in it.
We assume that the mail server supports SMTP with TLS.

bc. "::oddb_org::mail::smtp_host":  smtp.provider.net:port
"::oddb_org::mail::user":       user.account@provider.net
"::oddb_org::mail::password":   topsecret_password
"::oddb_org::hostname":         oddb.niklaus.org
'::vagrant::portBase':          44000
"::oddb_org::ip":               198.168.50.44 # last must be portBase / 1000
"::oddb_org::aliases":          [ "oddb", "another_alias_if_needed"]
'::oddb_org::username':         a_user
'::oddb_org::mail_to':         
  - first_user@ywesee.com
  - second_user@ywesee.com
'::oddb_org::root_name':        a_user@ywesee.com
'::oddb_org::root_pw':          topsecret_password
'::oddb_org::flickr_shared_secret': topsecret_password
'::oddb_org::flickr_api_key':       topsecret_key
 
h3. Download an actual dump of the database

You must have setup your acount for using @scp ywesee@thinpower.ywesee.com@

* @./get_db_dumps.rb@

h3. Start vagrant

* @cd /path/to/clone/of/vagrant-oddb_org@
* @bundle install@
* @librarian-puppet install --clean@
* @vagrant up@  # will take half an hour or so

h3. Install nginx to be able to see the http://oddb.niklaus.org

I used @sudo apt-get install nginx@ to install nging on my Debian system.

Then I added a file @/etc/nginx/sites-available/oddb.niklaus.org.nginx@ with the following content:

bc. server {
  location / {
    proxy_pass http://oddb.niklaus.org:55080/;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    }
}

I activated it with the following command.

@cd  /etc/nginx/sites-enabled/ && ln -s ../sites-available/oddb.niklaus.org.nginx .@

h3. Checking the installation

@rake spec@ should run the integration test @spec/smoketest_spec.rb@.

h2. installation into an already running funtoo server

Postgresql 8.x has a "bug 5680":https://groups.google.com/forum/#!topic/pgsql.bugs/SnqwEbhewtQ
that it cannot be configured when it finds under /usr/share/zoneinfo/ a logical link like
"posix -> .". Please remove any such links beforehand. 

These steps have not yet been verified. Ask Niklaus if it does not work! They must be run as root

bc. emerge ruby-augeas  # this must also be installed before running puppet to avoid errors
mv /etc/puppet /etc/puppet.backup
git clone git://github.com/ngiger/vagrant-oddb_org.git /etc/puppet
mkdir /etc/puppet/hieradata/private
vim etc/puppet/private/config.yaml # see section "Create and edit your configuration"
cd /etc/puppet
eselect ruby set ruby19
gem install bundler 
gem puppet --version=3.1.1  # ensure that version 3.1 or higher is installed
bundle install
gem install librarian-puppet 
librarian-puppet install --clean
ln -s /etc/puppet/hieradata/hiera.yaml /etc/
ln -s /etc/puppet/hieradata/hiera.yaml /etc/puppet
puppet apply manifests/site.pp 2>&1 | tee /var/log/puppet_`date +%Y%m%d%H%M`.log

h2. Testing changes in the puppet configuration

If you want to test your configuration or your changes to manifests, the following might work for you

bc. cd /etc/puppet
librarian-puppet install
rm -rf /etc/yus
# shows the step needed to recreate the yus DB
puppet apply modules/oddb_org/tests/yus.pp --noop  
# verbose output
puppet apply modules/oddb_org/tests/yus.pp --verbose 
# debugging output
puppet apply modules/oddb_org/tests/yus.pp --debug 

h2. Remarks

If you want to change the servername you have to edit the following file
* hieradata/private/config.yml 
and create a definition for your host, e.g. using a logical link
* @ln -s oddb.pp manifests/nodes/your_hostname.pp@

h3. How the funtoo-oddb basebox was created using veewee

bc. git clone git://github.com/ngiger/veewee.github
cd veewee
bundle install
export name="funtoo-oddb-`date +%Y%m%d`"
echo creating $name based on funtoo-latest-x86_64
veewee vbox define  --force $name 'funtoo-latest-x86_64'
cp -rpv /path/to/vagrant-oddb/definitions/funtoo-oddb/* definitions/${name}/veewee vbox build --force $name 2>&1 | tee $name.log
veewee vbox export --force $name
vagrant box add $name "$name.box"
rm Vagrantfile
vagrant init
vagrant up

